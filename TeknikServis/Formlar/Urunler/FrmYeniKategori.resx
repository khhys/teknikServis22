<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnKaydet.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAAKpJREFUWEdjGJLAp3KThm/VljRkDBKDStMegCxMmXD6f9H8G2AMYoPEoNK0ByDL
        QBZ3b/8AxiD2qANGHTDqgFEHDG0HYCvb8WG/qq2L0R0AEsOmFhdGqTtAAshlOzG4ce0zuANAbGxqcGGM
        ugPEAUnADKQ1Btk1+BwwoFEw4ImQVAAyAN0BIDGoNO3BqANGHTDqgFEHDAoHINcdGGU7rQG2uoOisn3g
        AAMDAOP1UW6LNVoCAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAAFJJREFUWEft0TEOADEIA0H+/+lLsz0COdI58tSwjSvil75LyPe4lyMfBphMguQM
        vxIkwwzzrZHZo7NGJowx5QivGjRHeI1HMGuLcz36Lc4jnFUd1Pl9n1athqUAAAAASUVORK5CYII=
</value>
  </data>
  <data name="pictureBox14.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAABAdJREFUeF7tmztoVFEQhqMiFtGYRIkQI4gEFCxtVBRMRDHBIjaKCD5atfWBNrHW
        1ryfdnY2Nhba2Ara+8QHKKKIqIVi/OecnxBOsu7MuefuvUv2gx+Wvef/Z1Znks0+mho0aFCRubm5LmiX
        QhtoqRlSM+ihkjbTYgPGU5CWH9AeWnMHtfZCP6WwkpO06oHpuveqeQ6tpT03UGMd9EIKGrhGux6YmiF5
        UBZmac8N1LjjS6mRx9BMuw0Ye6C/kmLgOO3JQfYJX0KN9N5DexwIGHJRer5AXbQnA5lboK9SwMBt2uNB
        SMwqPIBWMCIzksVMC/GjH4KgmFU4T3tmkHXBR6rJPvohCBx20XrkV+N22qNBxg5mWRiiPR0IjVmFJ9Bq
        RpgRLzMspBv9EAT3QtZVGKTdDLw3fISa9KMfggLWVfgN7aZdjXjotZB+9ENQJGYV5Lz6WSLOxjzby2/0
        Q1AoZhWGaa8Kzo54i5r8Rz8EBa1NCkdpr4ic8UdNqP9xk4GisgrWMf0IbWLEIuQa9EkOGqjd6IegcMwq
        3KN9EXLNH1EjtXtpLwY0ELMKZ2mfB/ed85dM1H70Q9BEzCp8h7oZIRndvM9CcaMfgkZiVuExtIqS2xaK
        H/0QNDTqWrNxBbrqb5oYYdnygKZaoXeuPT2/KAtvoVaWLRdoLGYVLJRv9EPQYMwqaCnf6IegyRbojWs3
        LfKbphw/9auBRlOvQvlHPwQNj7nW0zDK2PoBTadaBcloYWx9gcYPQllWof5GfyFoPubV5IWI9wDj6gs0
        HvPEaCkko5xPfP4Hmh537adhjLH1ARru830nQ1bhCOPLDRptg1KMfkh9rAKanHDt5sM4y5QTNJh69Jei
        j+XKBRqT1/JfuRb1xPw5/BLK/ZMoZtDUpGvPhrzre9HfNDHBsuUADcWM/n1I3vcXyW0r5VgFNCI/9d+7
        lvR8hjoZIRmdvM+C1GxjRHGgiSnXjo1jtM8j9/lLJiZpLwY00O/7MFHxk2S4Zv0EmFDMKqBwzOi/htYz
        YhFyjWcsFLMKKGod/T/QPtorgjP7edZCbVcBBWNG/ybtVcHZW95iojargEIxo/8UWsOIqshZ6JkYDdRm
        FVBk2pXTI8/0dtKuRjz0WpiiPR9QYMDXMXGJdjPwXvYRJvppTwuCZfQ/uBJ6HkIrGWFGvNAjCTKQzyog
        dMbF60nymWFkbIW+SaCBadrTgMCY0T9Ne2aQdcZHmhigPRsIaoeso3+X9mRIpo9WIz1nXwWEzLo4PfL2
        dfIdROZGyPofMUN7HAiw/oEiL14eoj05yD7MGhbiVgHGmNHP/gWFKqCG9Qsc8hjaadcD07L/0tTy/tqc
        AGMHtE0h+4hlRGoGPVRSBy0NGjQIaWr6B5cjWyFnDuayAAAAAElFTkSuQmCC
</value>
  </data>
</root>